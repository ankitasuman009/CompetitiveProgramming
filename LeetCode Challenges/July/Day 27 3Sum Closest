
package first;
import static java.lang.System.exit;
import java.util.*;

class TreeNode {
    int val;
    TreeNode left;
    TreeNode right;
    TreeNode() {}
    TreeNode(int val) { this.val = val; }
    TreeNode(int val, TreeNode left, TreeNode right) {
        this.val = val;
        this.left = left;
        this.right = right;
    }
}


class Solution2 {
    
    public static int threeSumClosest(int[] nums, int target) {
        int sum = 0;
        double diff = Math.pow(2, 10) + 1;
        Arrays.sort(nums);
//        PriorityQueue<Integer> pri = new PriorityQueue<>(new Comparator((a, b) => Integer.compare(a, b)));
        for(int i=0;i<nums.length-1;i++){
            int j = i + 1, k = nums.length - 1;
            while(j<k){
                int temp = nums[i] + nums[j] + nums[k];
                if(Math.abs(target - temp)<diff) {
                    sum = temp;
                    diff = Math.abs(target - temp);
                }
//                sum = Math.min(sum, temp);
                if(temp==target) return temp;
                else if(temp>target) k--;
                else j++;
            }
//            if(Math.abs(nums[i]>target?(nums[i]-target):(target-nums[i]))<=target) sum += nums[i];
        }
        return sum;
    }
    

    
    
    public static void main(String agrs[]){
//        int n = new Scanner(System.in).nextInt();
        
        int[] arr2 = {-1, 2, 1, -4}; 
    System.out.println(threeSumClosest(arr2, 1));
    }
}
