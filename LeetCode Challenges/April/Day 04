class Solution {
    public int longestValidParentheses(String s) {
        if(s.length()<2) return 0;
        if(s.length()<=3 && s.charAt(0)=='(' && s.charAt(1)==')') return 2;
        Stack<Integer> st = new Stack<>();
       for(int i=0;i<s.length();i++){
           if(s.charAt(i)=='(' || st.empty()) st.push(i);
           else if(s.charAt(st.peek())=='(' && !st.empty()) st.pop();
           else st.push(i);
       } 
        int max = 0;
       int n = s.length();
       while(!st.empty()){
           int end = st.pop();
           max = Math.max(max, n-end-1);
           n = end;
       }
        return Math.max(max, n);
    }
}
