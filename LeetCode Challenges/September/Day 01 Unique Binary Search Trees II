/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<TreeNode> generate(int start, int end) {
         List<TreeNode> li = new ArrayList<>();
        if(start > end){
            li.add(null);
            return li;
        }
         if(start==end){
             li.add(new TreeNode(start));
             return li;
         }
         for(int i=start;i<=end;i++){
             List<TreeNode> left = generate(start, i-1), right = generate(i+1, end);
             for(TreeNode l: left) 
                 for(TreeNode r: right)
                     li.add(new TreeNode(i, l, r));
         }
         return li;
     }
     
     
     public List<TreeNode> generateTrees(int n) {
         return generate(1, n);
    }
}
